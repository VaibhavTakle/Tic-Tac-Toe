{"version":3,"sources":["Square.js","Board.js","Game.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","state","xIsNext","handleReset","setState","handleClick","num","newSquares","status","this","winner","tie","Component","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAaeA,EAVA,SAACC,GACd,OACE,8BACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,WCHTC,EAAkB,SAACC,GAcvB,IAbA,IAAMC,EAAQ,CAEZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAGrC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,MAAO,IAyEMG,E,4MArEbC,MAAQ,CACNR,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1CS,SAAS,G,EAGXC,YAAc,WACZ,EAAKC,SAAS,CAAEX,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,O,EAG5DY,YAAc,SAACC,GAAD,OAAS,WACrB,IAAId,EAAgB,EAAKS,MAAMR,WAAY,EAAKQ,MAAMR,QAAQa,GAA9D,CAGA,IAAMC,EAAU,YAAO,EAAKN,MAAMR,SAGlCc,EAAWD,GAAO,EAAKL,MAAMC,QAAU,IAAM,IAC7C,EAAKE,SAAS,CACZX,QAASc,EACTL,SAAU,EAAKD,MAAMC,a,4CAGzB,WAAU,IAGJM,EAHG,EACsBC,KAAKR,MAA1BR,EADD,EACCA,QAASS,EADV,EACUA,QACXQ,EAASlB,EAAgBiB,KAAKR,MAAMR,SAEpCkB,EAAMF,KAAKR,MAAMR,QAkBvB,OAhBEe,EADEE,EACI,mBAAeA,GAEV,KAAXC,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,IACO,KAAXA,EAAI,GAEK,cAEH,qBAAiBT,EAAU,IAAM,KAGvC,sBAAKb,UAAU,QAAf,UACE,6BAAKmB,IACL,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,KACrD,cAAC,EAAD,CAAQd,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,KACrD,cAAC,EAAD,CAAQd,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,QAGvD,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,KACrD,cAAC,EAAD,CAAQd,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,KACrD,cAAC,EAAD,CAAQd,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,QAEvD,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,KACrD,cAAC,EAAD,CAAQd,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,KACrD,cAAC,EAAD,CAAQd,MAAOE,EAAQ,GAAIH,QAASmB,KAAKJ,YAAY,QAEvD,wBAAQf,QAASmB,KAAKN,YAAtB,0B,GAhEYS,aCfLC,E,4JATb,WACE,OACE,qBAAKxB,UAAU,OAAf,SACE,cAAC,EAAD,U,GAJWuB,aCSJE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d540aca9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <div>\r\n      <button className=\"Square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"./index.css\";\r\n\r\nconst calculateWinner = (squares) => {\r\n  const lines = [\r\n    //horizontal\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    //verticle\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    //diagonal\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    squares: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    xIsNext: true,\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ squares: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"] });\r\n  };\r\n\r\n  handleClick = (num) => () => {\r\n    if (calculateWinner(this.state.squares) || this.state.squares[num]) {\r\n      return;\r\n    }\r\n    const newSquares = [...this.state.squares];\r\n\r\n    //const newSquares = this.state.squares.slice()\r\n    newSquares[num] = this.state.xIsNext ? \"x\" : \"o\";\r\n    this.setState({\r\n      squares: newSquares,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  };\r\n  render() {\r\n    const { squares, xIsNext } = this.state;\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    const tie = this.state.squares;\r\n    if (winner) {\r\n      status = `winner : ${winner}`;\r\n    } else if (\r\n      tie[0] !== \"\" &&\r\n      tie[1] !== \"\" &&\r\n      tie[2] !== \"\" &&\r\n      tie[3] !== \"\" &&\r\n      tie[4] !== \"\" &&\r\n      tie[5] !== \"\" &&\r\n      tie[6] !== \"\" &&\r\n      tie[7] !== \"\" &&\r\n      tie[8] !== \"\"\r\n    ) {\r\n      status = \"Game is Tie\";\r\n    } else {\r\n      status = `Next Step: ${xIsNext ? \"x\" : \"o\"}`;\r\n    }\r\n    return (\r\n      <div className=\"Board\">\r\n        <h1>{status}</h1>\r\n        <div className=\"Row\">\r\n          <Square value={squares[0]} onClick={this.handleClick(0)} />\r\n          <Square value={squares[1]} onClick={this.handleClick(1)} />\r\n          <Square value={squares[2]} onClick={this.handleClick(2)} />\r\n        </div>\r\n\r\n        <div className=\"Row\">\r\n          <Square value={squares[3]} onClick={this.handleClick(3)} />\r\n          <Square value={squares[4]} onClick={this.handleClick(4)} />\r\n          <Square value={squares[5]} onClick={this.handleClick(5)} />\r\n        </div>\r\n        <div className=\"Row\">\r\n          <Square value={squares[6]} onClick={this.handleClick(6)} />\r\n          <Square value={squares[7]} onClick={this.handleClick(7)} />\r\n          <Square value={squares[8]} onClick={this.handleClick(8)} />\r\n        </div>\r\n        <button onClick={this.handleReset}>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./index.css\";\r\nclass Game extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Game\">\r\n        <Board />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Game from \"./Game\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}